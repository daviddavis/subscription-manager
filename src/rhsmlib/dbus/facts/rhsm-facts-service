#! /usr/bin/env python
#
# Copyright (c) 2016 Red Hat, Inc.
#
# This software is licensed to you under the GNU General Public License,
# version 2 (GPLv2). There is NO WARRANTY for this software, express or
# implied, including the implied warranties of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
# along with this software; if not, see
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
#
# Red Hat trademarks are not licensed under GPLv2. No permission is
# granted to use or replicate Red Hat trademarks that are incorporated
# in this software or its documentation.
#
import logging
import dbus
import sys
import optparse
import rhsmlib.dbus.facts.constants as constants
import rhsmlib.dbus.facts.base as base

from rhsmlib import import_class
from rhsmlib.dbus.server import Server

log = logging.getLogger('')


def load_bus_class(option, opt_str, value, parser):
    clazz = import_class(value)
    parser.values.bus = clazz


def main(options):
    object_classes = [
        base.FactsHost,
    ]

    try:
        log.debug('Starting DBus service with name %s' % options.bus_name)
        Server(
            bus_class=options.bus,
            bus_name=options.bus_name,
            object_classes=object_classes).run()
    except dbus.exceptions.DBusException as e:
        if e._dbus_error_name == "org.freedesktop.DBus.Error.AccessDenied":
            print("Access to DBus denied.  You need to edit /etc/dbus-1/system.conf to allow %s or run with "
                "dbus-daemon and a custom config file." % options.bus_name)
    return 0


if __name__ == "__main__":
    log.setLevel(logging.INFO)
    ch = logging.StreamHandler()
    ch.setLevel(logging.DEBUG)
    log.addHandler(ch)

    parser = optparse.OptionParser()
    parser.add_option("-b", "--bus",
        action="callback", callback=load_bus_class,
        type="string", default=dbus.SessionBus,
        help="Bus to use (e.g. dbus.SessionBus)")
    parser.add_option("-n", "--bus-name", default=constants.FACTS_DBUS_NAME)
    parser.add_option("-v", "--verbose", action="store_true")
    (options, _args) = parser.parse_args()

    if options.verbose:
        log.setLevel(logging.DEBUG)

    sys.exit(main(options))
